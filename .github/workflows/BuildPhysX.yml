name: Build PhysX

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }} - ${{ matrix.config }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        config: [debug, release, profile, checked]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: NVIDIA-Omniverse/PhysX
          ref: 107.0-physx-5.6.0
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y ninja-build cmake g++ python3

      - name: Generate Projects (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ./generate_projects.bat vc17win64-cpu-only
        working-directory: physx

      - name: Build-Windows
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        run: cmake --build ./compiler/vc17win64-cpu-only --config ${{matrix.config}}
        working-directory: physx

      - name: Package build output
        run: |
          mkdir -p output
          mkdir -p output/bin
          mkdir -p output/lib
          mkdir -p output/include
          if [ "${{ runner.os }}" == "Windows" ]; then
            cp physx/bin/*.dll output/bin/
            cp physx/bin/*.lib output/lib/ 
            cp physx/include/*.lib output/include/ 
            7z a PhysX-${{ matrix.os }}-${{ matrix.config }}.zip output/*
          else
            # Linux: .so and .a
            cp physx/bin/*.so output/bin/ || echo "No .so found"
            cp physx/bin/*.a output/lib/ || echo "No .a found"
            cp physx/include/*.lib output/include/ 
            tar -czf PhysX-${{ matrix.os }}-${{ matrix.config }}.tar.gz output/*
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PhysX-${{ matrix.os }}-${{ matrix.config }}
          path: |
            PhysX-${{ matrix.os }}-${{ matrix.config }}.*
