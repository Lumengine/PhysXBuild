name: Build PhysX

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }} - ${{ matrix.config }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        config: [debug, release, profile, checked]
        platform: [x86_64, aarch64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: NVIDIA-Omniverse/PhysX
          ref: 107.0-physx-5.6.0
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y ninja-build cmake g++ python3

      - name: Generate Projects (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ./generate_projects.bat vc17win64-cpu-only
        working-directory: physx

      - name: Build-Windows
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        run: cmake --build ./compiler/vc17win64-cpu-only --config ${{matrix.config}}
        working-directory: physx

      - name: Package build output
        id: build
        shell: bash
        run: |
          mkdir -p output
          mkdir -p output/bin
          mkdir -p output/lib
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            binArchiveName = "PhysX-5.6.0.win.${{ matrix.platform }}.vc143.mt.${{ matrix.config }}.zip"
            echo "PHYSX_BINARY_ARCHIVE=$binArchiveName" >> "$GITHUB_OUTPUT"
            cp physx/bin/win.x86_64.vc143.mt/${{matrix.config}}/*.dll output/bin/
            cp physx/bin/win.x86_64.vc143.mt/${{matrix.config}}/*.lib output/lib/ 
            
            7z a "$binArchiveName ${{github.workspace}}/output/bin/
            7z a "$binArchiveName ${{github.workspace}}/output/lib/
            7z a "$binArchiveName ${{github.workspace}}/physx/include/
            7z a "$binArchiveName ${{github.workspace}}/physx/documentation/

          else
            echo "PHYSX_BINARY_ARCHIVE=PhysX-5.6.0.linux.${{ matrix.platform }}.${{ matrix.config }}.tar.gz" >> "$GITHUB_OUTPUT"
            # Linux: .so and .a
            cp physx/bin/*.so output/bin/ 
            cp physx/bin/*.a output/lib/
            cp -r physx/include output/include 
            cp -r physx/documentation output/documentation 
            tar -czf PhysX-5.6.0.linux.${{ matrix.platform }}.${{ matrix.config }}.tar.gz output/*
          fi
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.build.outputs.PHYSX_BINARY_ARCHIVE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
